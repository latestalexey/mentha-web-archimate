akka {

  #loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = "DEBUG"
  stdout-loglevel = "DEBUG"
  #logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"

  log-dead-letters = on
  actor {
    debug {
      receive = on
      autoreceive = on
      # lifecycle = on
    }
  }

  io.tcp.direct-buffer-size=2M
  http.server.idle-timeout=60s # TODO: do something with this
  http.server.request-timeout=10s # TODO: do something with this

  actor.default-mailbox.stash-capacity=10000

  persistence.internal-stash-overflow-strategy="akka.persistence.ThrowExceptionConfigurator"

  persistence.journal.plugin = "akka.persistence.journal.inmem"
  persistence.snapshot-store.plugin = "akka.persistence.snapshot-store.local"
  persistence.snapshot-store.local.dir = "target/snapshots"

  persistence.snapshot-store.jgit-text-model {
    class = "org.mentha.utils.akka.persistence.jgit.snapshot.JgitJsonTextSnapshotStore"
    plugin-dispatcher = "akka.persistence.dispatchers.default-plugin-dispatcher"
    stream-dispatcher = "akka.persistence.dispatchers.default-stream-dispatcher"
    branch-prefix = "branch"
    pretty = on
    dir = "storage"
    max-load-attempts = 3
    commiter.name = "Mentha Archimate"
    commiter.mail = "archimate@localhost"
  }

  persistence.snapshot-store.jgit-path-model {
    class = "org.mentha.tools.archimate.state.ModelJsonPathSnapshotStore"
    plugin-dispatcher = "akka.persistence.dispatchers.default-plugin-dispatcher"
    stream-dispatcher = "akka.persistence.dispatchers.default-stream-dispatcher"
    branch-prefix = "branch"
    pretty = on
    dir = "storage"
    max-load-attempts = 3
    commiter.name = "Mentha Archimate"
    commiter.mail = "archimate@localhost"
  }

  mentha.state.persistence.journal = "akka.persistence.journal.inmem"
  mentha.state.persistence.snapshot = "akka.persistence.snapshot-store.jgit-path-model"
  mentha.state.poisonPillDelay = 30s
  mentha.state.autoSaveInterval = 90s
  mentha.state.autoSaveThreshold = 1000

}